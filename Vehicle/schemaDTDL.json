{
    "@id": "dtmi:com:ngsi-ld:Vehicle;0",
    "@type": "Interface",
    "@context": "dtmi:dtdl:context;2",
    "comment": "Smart Data Models - Vehicle adapted to DTDL from smartdatamodels.org. Source: https://raw.githubusercontent.com/smart-data-models/dataModel.Transportation/master/Vehicle/schema.json",
    "description": "This entity models a particular vehicle model, including all properties which are common to multiple vehicle instances belonging to such model.",
    "displayName": "Vehicle",
    "contents": [
        {
            "name": "alternateName",
            "writable": true,
            "displayName": "alternateName",
            "@type": "Property",
            "schema": "string",
            "comment": "An alternative name for this item"
        },
        {
            "name": "areaServed",
            "writable": true,
            "displayName": "areaServed",
            "@type": "Property",
            "schema": "string",
            "comment": "The geographic area where a service or offered item is provided"
        },
        {
            "name": "bearing",
            "writable": true,
            "displayName": "bearing",
            "@type": "Property",
            "schema": "long",
            "comment": "Gives the vehicle GPS angle measured in a clockwise direction from the True North. SameAs 'bearing' field from GTFS Realtime message-Position(https://developers.google.com/transit/gtfs-realtime/reference#message-position)"
        },
        {
            "name": "cargoWeight",
            "writable": true,
            "displayName": "cargoWeight",
            "@type": "Property",
            "schema": "long",
            "comment": "Current weight of the vehicle's cargo"
        },
        {
            "name": "color",
            "writable": true,
            "displayName": "color",
            "@type": "Property",
            "schema": "string",
            "comment": "The color of the product"
        },
        {
            "name": "currentTripCount",
            "writable": true,
            "displayName": "currentTripCount",
            "@type": "Property",
            "schema": "long",
            "comment": "The current count of trips made by the vehicle corresponding to this observation on the given day of operation."
        },
        {
            "name": "dataProvider",
            "writable": true,
            "displayName": "dataProvider",
            "@type": "Property",
            "schema": "string",
            "comment": "A sequence of characters identifying the provider of the harmonised data entity."
        },
        {
            "name": "dateCreated",
            "writable": true,
            "displayName": "dateCreated",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "Entity creation timestamp. This will usually be allocated by the storage platform."
        },
        {
            "name": "dateFirstUsed",
            "writable": true,
            "displayName": "dateFirstUsed",
            "@type": "Property",
            "schema": "date",
            "comment": "Timestamp which denotes when the vehicle was first used"
        },
        {
            "name": "dateModified",
            "writable": true,
            "displayName": "dateModified",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "Timestamp of the last modification of the entity. This will usually be allocated by the storage platform."
        },
        {
            "name": "dateVehicleFirstRegistered",
            "writable": true,
            "displayName": "dateVehicleFirstRegistered",
            "@type": "Property",
            "schema": "date",
            "comment": "The date of the first registration of the vehicle with the respective public authorities"
        },
        {
            "name": "description",
            "writable": true,
            "displayName": "description",
            "@type": "Property",
            "schema": "string",
            "comment": "A description of this item"
        },
        {
            "name": "deviceSimNumber",
            "writable": true,
            "displayName": "deviceSimNumber",
            "@type": "Property",
            "schema": "string",
            "comment": "Gives the SIM number of the device in the vehicle."
        },
        {
            "name": "fleetVehicleId",
            "writable": true,
            "displayName": "fleetVehicleId",
            "@type": "Property",
            "schema": "string",
            "comment": "The identifier of the vehicle in the context of the fleet of vehicles to which it belongs"
        },
        {
            "name": "fuelEfficiency",
            "writable": true,
            "displayName": "fuelEfficiency",
            "@type": "Property",
            "schema": "long",
            "comment": "The distance traveled per unit of fuel used, commonly in kilometers per liter (km/L)."
        },
        {
            "name": "fuelFilled",
            "writable": true,
            "displayName": "fuelFilled",
            "@type": "Property",
            "schema": "long",
            "comment": "Amount of fuel filled in liters to the vehicle corresponding to this observation."
        },
        {
            "name": "fuelType",
            "writable": true,
            "displayName": "fuelType",
            "@type": "Property",
            "schema": "string",
            "comment": "The type of fuel suitable for the engine or engines of the vehicle corresponding to this observation."
        },
        {
            "name": "heading",
            "writable": true,
            "displayName": "heading"
        },
        {
            "name": "ignitionStatus",
            "writable": true,
            "displayName": "ignitionStatus",
            "@type": "Property",
            "schema": "boolean",
            "comment": "Gives the ignition status of the vehicle. True means ignited"
        },
        {
            "name": "image",
            "writable": true,
            "displayName": "image",
            "@type": "Property",
            "schema": "string",
            "comment": "An image of the item"
        },
        {
            "name": "license_plate",
            "writable": true,
            "displayName": "license_plate",
            "@type": "Property",
            "schema": "string",
            "comment": "Gives the License Plate number of the vehicle. SameAs: license_plate field from GTFS Realtime message-VehicleDescriptor (https://developers.google.com/transit/gtfs-realtime/reference#message-vehicledescriptor)'"
        },
        {
            "name": "mileageFromOdometer",
            "writable": true,
            "displayName": "mileageFromOdometer",
            "@type": "Property",
            "schema": "long",
            "comment": "The total distance travelled by the particular vehicle since its initial production, as read from its odometer"
        },
        {
            "name": "name",
            "writable": true,
            "displayName": "name",
            "@type": "Property",
            "schema": "string",
            "comment": "The name of this item."
        },
        {
            "name": "observationDateTime",
            "writable": true,
            "displayName": "observationDateTime",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "Last reported time of observation"
        },
        {
            "name": "purchaseDate",
            "writable": true,
            "displayName": "purchaseDate",
            "@type": "Property",
            "schema": "dateTime",
            "comment": "The date the item e.g. vehicle was purchased by the current owner"
        },
        {
            "name": "refVehicleModel",
            "writable": true,
            "displayName": "refVehicleModel"
        },
        {
            "name": "reportId",
            "writable": true,
            "displayName": "reportId",
            "@type": "Property",
            "schema": "string",
            "comment": "Unique Id assigned for the issue or report or feedback or transaction corresponding to this observation."
        },
        {
            "name": "seeAlso",
            "writable": true,
            "displayName": "seeAlso"
        },
        {
            "name": "source",
            "writable": true,
            "displayName": "source",
            "@type": "Property",
            "schema": "string",
            "comment": "A sequence of characters giving the original source of the entity data as a URL. Recommended to be the fully qualified domain name of the source provider, or the URL to the source object."
        },
        {
            "name": "speed",
            "writable": true,
            "displayName": "speed"
        },
        {
            "name": "tripNetWeightCollected",
            "writable": true,
            "displayName": "tripNetWeightCollected",
            "@type": "Property",
            "schema": "long",
            "comment": "The net weight collected by the vehicle corresponding to this observation at the end of the trip."
        },
        {
            "name": "vehicleAltitude",
            "writable": true,
            "displayName": "vehicleAltitude",
            "@type": "Property",
            "schema": "string",
            "comment": "Gives the current altitude of the vehicle using GPS"
        },
        {
            "name": "vehicleConfiguration",
            "writable": true,
            "displayName": "vehicleConfiguration",
            "@type": "Property",
            "schema": "string",
            "comment": "A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'"
        },
        {
            "name": "vehicleIdentificationNumber",
            "writable": true,
            "displayName": "vehicleIdentificationNumber",
            "@type": "Property",
            "schema": "string",
            "comment": "The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles"
        },
        {
            "name": "vehiclePlateIdentifier",
            "writable": true,
            "displayName": "vehiclePlateIdentifier",
            "@type": "Property",
            "schema": "string",
            "comment": " An identifier or code displayed on a vehicle registration plate attached to the vehicle used for official identification purposes. The registration identifier is numeric or alphanumeric and is unique within the issuing authority's region. Normative References: DATEXII `vehicleRegistrationPlateIdentifier`"
        },
        {
            "name": "vehicleTrackerDevice",
            "writable": true,
            "displayName": "vehicleTrackerDevice",
            "@type": "Property",
            "schema": "string",
            "comment": "Installation status of the GPS device or the tracking device fitted to the vehicle corresponding to this observation."
        },
        {
            "name": "wardId",
            "writable": true,
            "displayName": "wardId",
            "@type": "Property",
            "schema": "string",
            "comment": "Ward ID of the entity corresponding to this observation."
        },
        {
            "name": "wardName",
            "writable": true,
            "displayName": "wardName",
            "@type": "Property",
            "schema": "string",
            "comment": "Ward name of the entity corresponding to this observation."
        },
        {
            "name": "zoneName",
            "writable": true,
            "displayName": "zoneName",
            "@type": "Property",
            "schema": "string",
            "comment": "Zone name of the entity corresponding to this observation"
        },
        {
            "@type": "Telemetry",
            "name": "annotations",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "Annotations about the item",
            "displayName": "annotations"
        },
        {
            "@type": "Telemetry",
            "name": "category",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "Vehicle category(ies) from an external point of view. This is different than the vehicle type (car, lorry, etc.) represented by the `vehicleType` property. Enum:'municipalServices, nonTracked, private, public, specialUsage, tracked'. Tracked vehicles are those vehicles which position is permanently tracked by a remote system. Or any other needed by an application They incorporate a GPS receiver together with a network connection to periodically update a reported position (location, speed, heading ...).",
            "displayName": "category"
        },
        {
            "@type": "Telemetry",
            "name": "feature",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "Feature(s) incorporated by the vehicle. Enum:' abs, airbag, alarm, backCamera, disabledRamp, gps, internetConnection, overspeed, proximitySensor, wifi'. Or any other needed by the application. In order to represent multiple instances of a feature it can be used the following syntax: `<feature>,<occurences>`. For example, a car with 4 airbags will be represented by `airbag,4`.",
            "displayName": "feature"
        },
        {
            "@type": "Telemetry",
            "name": "owner",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)",
            "displayName": "owner"
        },
        {
            "@type": "Telemetry",
            "name": "serviceProvided",
            "schema": {
                "@type": "Array",
                "elementSchema": "string"
            },
            "comment": "Service(s) the vehicle is capable of providing or it is assigned to. Enum:'auxiliaryServices, cargoTransport, construction, fairground, garbageCollection, goodsSelling, maintenance, parksAndGardens, roadSignalling, specialTransport, streetCleaning, streetLighting, urbanTransit, wasteContainerCleaning'. Or any other value needed by an specific application.",
            "displayName": "serviceProvided"
        },
        {
            "@type": "object",
            "name": "address",
            "comment": "The mailing address",
            "displayName": "address",
            "fields": [
                {
                    "name": "addressCountry",
                    "schema": "string"
                },
                {
                    "name": "addressLocality",
                    "schema": "string"
                },
                {
                    "name": "addressRegion",
                    "schema": "string"
                },
                {
                    "name": "postOfficeBoxNumber",
                    "schema": "string"
                },
                {
                    "name": "postalCode",
                    "schema": "string"
                },
                {
                    "name": "streetAddress",
                    "schema": "string"
                }
            ]
        },
        {
            "@type": "Telemetry",
            "name": "location_Point",
            "schema": "point"
        },
        {
            "@type": "Telemetry",
            "name": "location_LineString",
            "schema": "lineString"
        },
        {
            "@type": "Telemetry",
            "name": "location_Polygon",
            "schema": "polygon"
        },
        {
            "@type": "Telemetry",
            "name": "location_MultiPoint",
            "schema": "multiPoint"
        },
        {
            "@type": "Telemetry",
            "name": "location_MultiLineString",
            "schema": "multiLineString"
        },
        {
            "@type": "Telemetry",
            "name": "location_MultiPolygon",
            "schema": "multiPolygon"
        },
        {
            "@type": "Telemetry",
            "name": "previousLocation_Point",
            "schema": "point"
        },
        {
            "@type": "Telemetry",
            "name": "previousLocation_LineString",
            "schema": "lineString"
        },
        {
            "@type": "Telemetry",
            "name": "previousLocation_Polygon",
            "schema": "polygon"
        },
        {
            "@type": "Telemetry",
            "name": "previousLocation_MultiPoint",
            "schema": "multiPoint"
        },
        {
            "@type": "Telemetry",
            "name": "previousLocation_MultiLineString",
            "schema": "multiLineString"
        },
        {
            "@type": "Telemetry",
            "name": "previousLocation_MultiPolygon",
            "schema": "multiPolygon"
        },
        {
            "@type": "Telemetry",
            "name": "deviceBatteryStatus",
            "schema": {
                "@type": "Enum",
                "valueSchema": "string",
                "enumValues": [
                    {
                        "name": "connected",
                        "displayName": "connected",
                        "enumValue": 1
                    },
                    {
                        "name": "disconnected",
                        "displayName": "disconnected",
                        "enumValue": 2
                    }
                ]
            }
        },
        {
            "@type": "Telemetry",
            "name": "serviceStatus",
            "schema": {
                "@type": "Enum",
                "valueSchema": "string",
                "enumValues": [
                    {
                        "name": "broken",
                        "displayName": "broken",
                        "enumValue": 1
                    },
                    {
                        "name": "onRoute",
                        "displayName": "onRoute",
                        "enumValue": 2
                    },
                    {
                        "name": "outOfService",
                        "displayName": "outOfService",
                        "enumValue": 3
                    },
                    {
                        "name": "parked",
                        "displayName": "parked",
                        "enumValue": 4
                    }
                ]
            }
        },
        {
            "@type": "Telemetry",
            "name": "vehicleRunningStatus",
            "schema": {
                "@type": "Enum",
                "valueSchema": "string",
                "enumValues": [
                    {
                        "name": "running",
                        "displayName": "running",
                        "enumValue": 1
                    },
                    {
                        "name": "stopped",
                        "displayName": "stopped",
                        "enumValue": 2
                    },
                    {
                        "name": "waiting",
                        "displayName": "waiting",
                        "enumValue": 3
                    }
                ]
            }
        },
        {
            "@type": "Telemetry",
            "name": "vehicleSpecialUsage",
            "schema": {
                "@type": "Enum",
                "valueSchema": "string",
                "enumValues": [
                    {
                        "name": "ambulance",
                        "displayName": "ambulance",
                        "enumValue": 1
                    },
                    {
                        "name": "fireBrigade",
                        "displayName": "fireBrigade",
                        "enumValue": 2
                    },
                    {
                        "name": "military",
                        "displayName": "military",
                        "enumValue": 3
                    },
                    {
                        "name": "police",
                        "displayName": "police",
                        "enumValue": 4
                    },
                    {
                        "name": "schoolTransportation",
                        "displayName": "schoolTransportation",
                        "enumValue": 5
                    },
                    {
                        "name": "taxi",
                        "displayName": "taxi",
                        "enumValue": 6
                    },
                    {
                        "name": "trashManagement",
                        "displayName": "trashManagement",
                        "enumValue": 7
                    }
                ]
            }
        },
        {
            "@type": "Telemetry",
            "name": "vehicleType",
            "schema": {
                "@type": "Enum",
                "valueSchema": "string",
                "enumValues": [
                    {
                        "name": "agriculturalVehicle",
                        "displayName": "agriculturalVehicle",
                        "enumValue": 1
                    },
                    {
                        "name": "anyVehicle",
                        "displayName": "anyVehicle",
                        "enumValue": 2
                    },
                    {
                        "name": "articulatedVehicle",
                        "displayName": "articulatedVehicle",
                        "enumValue": 3
                    },
                    {
                        "name": "autorickshaw",
                        "displayName": "autorickshaw",
                        "enumValue": 4
                    },
                    {
                        "name": "bicycle",
                        "displayName": "bicycle",
                        "enumValue": 5
                    },
                    {
                        "name": "binTrolley",
                        "displayName": "binTrolley",
                        "enumValue": 6
                    },
                    {
                        "name": "BRT mini bus\u00b7",
                        "displayName": "BRT mini bus\u00b7",
                        "enumValue": 7
                    },
                    {
                        "name": "BRT bus",
                        "displayName": "BRT bus",
                        "enumValue": 8
                    },
                    {
                        "name": "bus",
                        "displayName": "bus",
                        "enumValue": 9
                    },
                    {
                        "name": "car",
                        "displayName": "car",
                        "enumValue": 10
                    },
                    {
                        "name": "caravan",
                        "displayName": "caravan",
                        "enumValue": 11
                    },
                    {
                        "name": "carOrLightVehicle",
                        "displayName": "carOrLightVehicle",
                        "enumValue": 12
                    },
                    {
                        "name": "carWithCaravan",
                        "displayName": "carWithCaravan",
                        "enumValue": 13
                    },
                    {
                        "name": "carWithTrailer",
                        "displayName": "carWithTrailer",
                        "enumValue": 14
                    },
                    {
                        "name": "cleaningTrolley",
                        "displayName": "cleaningTrolley",
                        "enumValue": 15
                    },
                    {
                        "name": "compactor",
                        "displayName": "compactor",
                        "enumValue": 16
                    },
                    {
                        "name": "constructionOrMaintenanceVehicle",
                        "displayName": "constructionOrMaintenanceVehicle",
                        "enumValue": 17
                    },
                    {
                        "name": "dumper",
                        "displayName": "dumper",
                        "enumValue": 18
                    },
                    {
                        "name": "e-moped",
                        "displayName": "e-moped",
                        "enumValue": 19
                    },
                    {
                        "name": "e-scooter",
                        "displayName": "e-scooter",
                        "enumValue": 20
                    },
                    {
                        "name": "e-motorcycle",
                        "displayName": "e-motorcycle",
                        "enumValue": 21
                    },
                    {
                        "name": "fourWheelDrive",
                        "displayName": "fourWheelDrive",
                        "enumValue": 22
                    },
                    {
                        "name": "highSidedVehicle",
                        "displayName": "highSidedVehicle",
                        "enumValue": 23
                    },
                    {
                        "name": "hopper",
                        "displayName": "hopper",
                        "enumValue": 24
                    },
                    {
                        "name": "lorry",
                        "displayName": "lorry",
                        "enumValue": 25
                    },
                    {
                        "name": "minibus",
                        "displayName": "minibus",
                        "enumValue": 26
                    },
                    {
                        "name": "moped",
                        "displayName": "moped",
                        "enumValue": 27
                    },
                    {
                        "name": "motorcycle",
                        "displayName": "motorcycle",
                        "enumValue": 28
                    },
                    {
                        "name": "motorcycleWithSideCar",
                        "displayName": "motorcycleWithSideCar",
                        "enumValue": 29
                    },
                    {
                        "name": "motorscooter",
                        "displayName": "motorscooter",
                        "enumValue": 30
                    },
                    {
                        "name": "sweepingMachine",
                        "displayName": "sweepingMachine",
                        "enumValue": 31
                    },
                    {
                        "name": "tanker",
                        "displayName": "tanker",
                        "enumValue": 32
                    },
                    {
                        "name": "tempo",
                        "displayName": "tempo",
                        "enumValue": 33
                    },
                    {
                        "name": "threeWheeledVehicle",
                        "displayName": "threeWheeledVehicle",
                        "enumValue": 34
                    },
                    {
                        "name": "tipper",
                        "displayName": "tipper",
                        "enumValue": 35
                    },
                    {
                        "name": "trailer",
                        "displayName": "trailer",
                        "enumValue": 36
                    },
                    {
                        "name": "tram",
                        "displayName": "tram",
                        "enumValue": 37
                    },
                    {
                        "name": "trolley",
                        "displayName": "trolley",
                        "enumValue": 38
                    },
                    {
                        "name": "twoWheeledVehicle",
                        "displayName": "twoWheeledVehicle",
                        "enumValue": 39
                    },
                    {
                        "name": "van",
                        "displayName": "van",
                        "enumValue": 40
                    },
                    {
                        "name": "vehicleWithoutCatalyticConverter",
                        "displayName": "vehicleWithoutCatalyticConverter",
                        "enumValue": 41
                    },
                    {
                        "name": "vehicleWithCaravan",
                        "displayName": "vehicleWithCaravan",
                        "enumValue": 42
                    },
                    {
                        "name": "vehicleWithTrailer",
                        "displayName": "vehicleWithTrailer",
                        "enumValue": 43
                    },
                    {
                        "name": "withEvenNumberedRegistrationPlates",
                        "displayName": "withEvenNumberedRegistrationPlates",
                        "enumValue": 44
                    },
                    {
                        "name": "withOddNumberedRegistrationPlates",
                        "displayName": "withOddNumberedRegistrationPlates",
                        "enumValue": 45
                    },
                    {
                        "name": "other",
                        "displayName": "other",
                        "enumValue": 46
                    }
                ]
            }
        }
    ]
}